h3 {
  font-size: 1rem;
  font-weight: normal;
  grid-area: header;
  margin: 1rem 0 0;
}

[data-glyph] {
  font-size: 124px;
  line-height: 1.45;
  transition: all 0.25s;

  & + div {
    opacity: 0;
    perspective: 100px;
    perspective-origin: 50% 25%;
    transform: scaleY(-1) translateY(-0.25rem);
    transition: all 0.25s 0.25s;
    visibility: hidden;
    em {
      background: #fff;
      border: 2px solid;
      border-radius: 2px;
      box-shadow: 0 -0.25rem 0.5rem rgba(#000, 0.2);
      content: attr(data-glyph);
      display: block;
      font-size: 124px;
      font-style: normal;
      line-height: 1;
      padding-top: 35px;
      transform: rotateX(-20deg);
    }
  }
}

label:hover + div {
  opacity: 1;
  perspective: 225px;
  transform: scaleY(-1) translateY(0);
  visibility: visible;
  em {
    box-shadow: 0 -0.5rem 1rem rgba(#000, 0.1);
  }
}

section {
  :checked + label {
    color: $red;
    text-shadow: 0 0 1rem rgba($red, 0.3);
  }

  :checked + label + div {
    opacity: 1;
    perspective: 225px;
    transform: scaleY(-1) translateY(0);
    visibility: visible;
    em {
      box-shadow: 0 -0.5rem 1rem rgba(#000, 0.1);
    }
  }
}

@for $puzzle from 1 through 10 {
  .p#{$puzzle} {
    display: none;
  }
}

@for $in from 1 through 10 {
  .g#{$in} {
    animation: enter 0.5s 2s 1 both;
  }
}

@for $puzzle from 1 through 10 {
  #p#{$puzzle}g1:checked {
    animation: exit 0.5s 0.5s 1 both;
    pointer-events: none;

    ~ .p#{$puzzle + 1} {
      display: block;
    }
  }
}

@for $puzzle from 1 through 10 {
  @for $out from 1 through 10 {
    #p#{$puzzle}g1:checked ~ .p#{$puzzle}.g#{$out} {
      animation: exit 0.5s 0.5s 1 both;
      pointer-events: none;
    }

    @if $out > 1 {
      #p#{$puzzle}g1:checked ~ .p#{$puzzle}.r#{$out} {
        opacity: 0;
        pointer-events: none;
        visibility: hidden;
      }
    }
  }

  // Only the matching mirror
  #p#{$puzzle}g1:checked ~ .p#{$puzzle}.r1 {
    animation: exitMirror 0.5s 0.5s 1 both;
    pointer-events: none;
  }
}

@keyframes enter {
  from {
    opacity: 0;
    transform: translateX($pX);
    visibility: hidden;
  }

  to {
    opacity: 1;
    transform: translateX(0);
    visibility: visible;
  }
}

@keyframes exit {
  from {
    opacity: 1;
    transform: translateX(0);
    visibility: visible;
  }

  to {
    opacity: 0;
    transform: translateX(-$pX);
    visibility: hidden;
  }
}

@keyframes exitMirror {
  from {
    opacity: 1;
    transform: translateX(0) scaleY(-1) translateY(0);
    visibility: visible;
  }

  to {
    opacity: 0;
    transform: translateX(-$pX) scaleY(-1) translateY(0);
    visibility: hidden;
  }
}
